{
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "require(\"dotenv\").config();\n\nvar createError = require(\"http-errors\");\n\nvar express = require(\"express\");\n\nvar path = require(\"path\");\n\nvar cookieParser = require(\"cookie-parser\");\n\nvar logger = require(\"morgan\");\n\nvar cors = require(\"cors\");\n\nvar indexRouter = require(\"./routes/index\");\n\nvar conversionsRouter = require(\"./routes/conversions\");\n\nvar app = express(); // view engine setup\n\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"jade\");\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, \"public\")));\napp.use(express.static(path.join(__dirname, \"files\")));\napp.use(cors());\napp.use(\"/\", indexRouter);\napp.use(\"/conversions\", conversionsRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiY3JlYXRlRXJyb3IiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImNvcnMiLCJpbmRleFJvdXRlciIsImNvbnZlcnNpb25zUm91dGVyIiwiYXBwIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwibG9jYWxzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0Iiwic3RhdHVzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLElBQUlDLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBSUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlLLFlBQVksR0FBR0wsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBQ0EsSUFBSU0sTUFBTSxHQUFHTixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlRLFdBQVcsR0FBR1IsT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUNBLElBQUlTLGlCQUFpQixHQUFHVCxPQUFPLENBQUMsc0JBQUQsQ0FBL0I7O0FBQ0EsSUFBSVUsR0FBRyxHQUFHUCxPQUFPLEVBQWpCLEMsQ0FDQTs7QUFDQU8sR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQlAsSUFBSSxDQUFDUSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixNQUF2QjtBQUNBRCxHQUFHLENBQUNJLEdBQUosQ0FBUVIsTUFBTSxDQUFDLEtBQUQsQ0FBZDtBQUNBSSxHQUFHLENBQUNJLEdBQUosQ0FBUVgsT0FBTyxDQUFDWSxJQUFSLEVBQVI7QUFDQUwsR0FBRyxDQUFDSSxHQUFKLENBQVFYLE9BQU8sQ0FBQ2EsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxZQUFZLEVBQXBCO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWCxPQUFPLENBQUNlLE1BQVIsQ0FBZWQsSUFBSSxDQUFDUSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRWCxPQUFPLENBQUNlLE1BQVIsQ0FBZWQsSUFBSSxDQUFDUSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBZixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRUCxJQUFJLEVBQVo7QUFDQUcsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhTixXQUFiO0FBQ0FFLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGNBQVIsRUFBd0JMLGlCQUF4QixFLENBQ0E7O0FBQ0FDLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ25CLFdBQVcsQ0FBQyxHQUFELENBQVosQ0FBSjtBQUNELENBRkQsRSxDQUdBOztBQUNBUSxHQUFHLENBQUNJLEdBQUosQ0FBUSxVQUFTUSxHQUFULEVBQWNILEdBQWQsRUFBbUJDLEdBQW5CLEVBQXdCQyxJQUF4QixFQUE4QjtBQUNwQztBQUNBRCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkYsR0FBRyxDQUFDRSxPQUF6QjtBQUNBSixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0UsS0FBWCxHQUFtQk4sR0FBRyxDQUFDVCxHQUFKLENBQVFnQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q0osR0FBdkMsR0FBNkMsRUFBaEUsQ0FIb0MsQ0FJdEM7O0FBQ0VGLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTCxHQUFHLENBQUNLLE1BQUosSUFBYyxHQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxPQUFYO0FBQ0QsQ0FQRDtBQVFBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92LXJhbmEvS25vd1doZXJlL2JhY2tlbmQvIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTtcbnZhciBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG52YXIgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xudmFyIGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoXCJjb29raWUtcGFyc2VyXCIpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG52YXIgY29ycyA9IHJlcXVpcmUoXCJjb3JzXCIpO1xudmFyIGluZGV4Um91dGVyID0gcmVxdWlyZShcIi4vcm91dGVzL2luZGV4XCIpO1xudmFyIGNvbnZlcnNpb25zUm91dGVyID0gcmVxdWlyZShcIi4vcm91dGVzL2NvbnZlcnNpb25zXCIpO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KFwidmlld3NcIiwgcGF0aC5qb2luKF9fZGlybmFtZSwgXCJ2aWV3c1wiKSk7XG5hcHAuc2V0KFwidmlldyBlbmdpbmVcIiwgXCJqYWRlXCIpO1xuYXBwLnVzZShsb2dnZXIoXCJkZXZcIikpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgXCJwdWJsaWNcIikpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgXCJmaWxlc1wiKSkpO1xuYXBwLnVzZShjb3JzKCkpO1xuYXBwLnVzZShcIi9cIiwgaW5kZXhSb3V0ZXIpO1xuYXBwLnVzZShcIi9jb252ZXJzaW9uc1wiLCBjb252ZXJzaW9uc1JvdXRlcik7XG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBuZXh0KGNyZWF0ZUVycm9yKDQwNCkpO1xufSk7XG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldChcImVudlwiKSA9PT0gXCJkZXZlbG9wbWVudFwiID8gZXJyIDoge307XG4vLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoXCJlcnJvclwiKTtcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "require",
        "config",
        "createError",
        "express",
        "path",
        "cookieParser",
        "logger",
        "cors",
        "indexRouter",
        "conversionsRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAIC,WAAW,GAAGF,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIS,iBAAiB,GAAGT,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIU,GAAG,GAAGP,OAAO,EAAjB,C,CACA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAD,GAAG,CAACI,GAAJ,CAAQR,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQT,YAAY,EAApB;AACAK,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACe,MAAR,CAAed,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAH,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACe,MAAR,CAAed,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAf,CAAR;AACAH,GAAG,CAACI,GAAJ,CAAQP,IAAI,EAAZ;AACAG,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaN,WAAb;AACAE,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBL,iBAAxB,E,CACA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACnB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAGA;;AACAQ,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAItC;;AACEF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CAPD;AAQAC,MAAM,CAACC,OAAP,GAAiBpB,GAAjB",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/",
      "sourcesContent": [
        "require(\"dotenv\").config();\nvar createError = require(\"http-errors\");\nvar express = require(\"express\");\nvar path = require(\"path\");\nvar cookieParser = require(\"cookie-parser\");\nvar logger = require(\"morgan\");\nvar cors = require(\"cors\");\nvar indexRouter = require(\"./routes/index\");\nvar conversionsRouter = require(\"./routes/conversions\");\nvar app = express();\n// view engine setup\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"jade\");\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, \"public\")));\napp.use(express.static(path.join(__dirname, \"files\")));\napp.use(cors());\napp.use(\"/\", indexRouter);\napp.use(\"/conversions\", conversionsRouter);\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n// render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601566158156
  },
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92LXJhbmEvS25vd1doZXJlL2JhY2tlbmQvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601560141469
  },
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/routes/conversions.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/routes/conversions.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/routes/conversions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/routes/conversions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
        "sourceFileName": "conversions.js"
      }
    },
    "ast": null,
    "code": "var express = require(\"express\");\n\nvar videoQueue = require(\"../queues/videoQueue\");\n\nvar router = express.Router();\n\nconst models = require(\"../models\");\n\nvar multer = require(\"multer\");\n\nconst fs = require(\"fs\").promises;\n\nconst path = require(\"path\");\n\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"./files\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, `${+new Date()}_${file.originalname}`);\n  }\n});\nconst upload = multer({\n  storage\n});\nrouter.get(\"/\", async (req, res, next) => {\n  const conversions = await models.VideoConversion.findAll();\n  res.json(conversions);\n});\nrouter.post(\"/\", upload.single(\"video\"), async (req, res, next) => {\n  const data = { ...req.body,\n    filePath: req.file.path\n  };\n  const conversion = await models.VideoConversion.create(data);\n  res.json(conversion);\n});\nrouter.delete(\"/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversions = await models.VideoConversion.findAll({\n    where: {\n      id\n    }\n  });\n  const conversion = conversions[0];\n\n  try {\n    await fs.unlink(`${__dirname}/../${conversion.filePath}`);\n\n    if (conversion.convertedFilePath) {\n      await fs.unlink(`${__dirname}/../files/${conversion.convertedFilePath}`);\n    }\n  } catch (error) {} finally {\n    await models.VideoConversion.destroy({\n      where: {\n        id\n      }\n    });\n    res.json({});\n  }\n});\nrouter.put(\"/cancel/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversion = await models.VideoConversion.update({\n    status: \"cancelled\"\n  }, {\n    where: {\n      id\n    }\n  });\n  res.json(conversion);\n});\nrouter.get(\"/start/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversions = await models.VideoConversion.findAll({\n    where: {\n      id\n    }\n  });\n  const conversion = conversions[0];\n  const outputFormat = conversion.outputFormat;\n  const filePath = path.basename(conversion.filePath);\n  await videoQueue.add({\n    id,\n    path: filePath,\n    outputFormat\n  });\n  res.json({});\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnZlcnNpb25zLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwidmlkZW9RdWV1ZSIsInJvdXRlciIsIlJvdXRlciIsIm1vZGVscyIsIm11bHRlciIsImZzIiwicHJvbWlzZXMiLCJwYXRoIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2IiLCJmaWxlbmFtZSIsIkRhdGUiLCJvcmlnaW5hbG5hbWUiLCJ1cGxvYWQiLCJnZXQiLCJyZXMiLCJuZXh0IiwiY29udmVyc2lvbnMiLCJWaWRlb0NvbnZlcnNpb24iLCJmaW5kQWxsIiwianNvbiIsInBvc3QiLCJzaW5nbGUiLCJkYXRhIiwiYm9keSIsImZpbGVQYXRoIiwiY29udmVyc2lvbiIsImNyZWF0ZSIsImRlbGV0ZSIsImlkIiwicGFyYW1zIiwid2hlcmUiLCJ1bmxpbmsiLCJfX2Rpcm5hbWUiLCJjb252ZXJ0ZWRGaWxlUGF0aCIsImVycm9yIiwiZGVzdHJveSIsInB1dCIsInVwZGF0ZSIsInN0YXR1cyIsIm91dHB1dEZvcm1hdCIsImJhc2VuYW1lIiwiYWRkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxVQUFVLEdBQUdELE9BQU8sQ0FBRSxzQkFBRixDQUF4Qjs7QUFDQSxJQUFJRSxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixFQUFiOztBQUNBLE1BQU1DLE1BQU0sR0FBR0osT0FBTyxDQUFDLFdBQUQsQ0FBdEI7O0FBQ0EsSUFBSUssTUFBTSxHQUFHTCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxNQUFNTSxFQUFFLEdBQUdOLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY08sUUFBekI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHUixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNUyxPQUFPLEdBQUdKLE1BQU0sQ0FB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QixlQUFQLENBQXVCb0IsTUFBdkIsQ0FDdkI7QUFBRUMsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FEdUIsRUFFdkI7QUFDRVIsSUFBQUEsS0FBSyxFQUFFO0FBQUVGLE1BQUFBO0FBQUY7QUFEVCxHQUZ1QixDQUF6QjtBQU1BZCxFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBU00sVUFBVDtBQUNELENBVEQ7QUFVQTdCLE1BQU0sQ0FBQ2lCLEdBQVAsQ0FBVyxZQUFYLEVBQXlCLE9BQU9QLEdBQVAsRUFBWVEsR0FBWixFQUFpQkMsSUFBakIsS0FBMEI7QUFDakQsUUFBTWEsRUFBRSxHQUFHdEIsR0FBRyxDQUFDdUIsTUFBSixDQUFXRCxFQUF0QjtBQUNBLFFBQU1aLFdBQVcsR0FBRyxNQUFNbEIsTUFBTSxDQUFDbUIsZUFBUCxDQUF1QkMsT0FBdkIsQ0FBK0I7QUFBRVksSUFBQUEsS0FBSyxFQUFFO0FBQUVGLE1BQUFBO0FBQUY7QUFBVCxHQUEvQixDQUExQjtBQUNBLFFBQU1ILFVBQVUsR0FBR1QsV0FBVyxDQUFDLENBQUQsQ0FBOUI7QUFDQSxRQUFNdUIsWUFBWSxHQUFHZCxVQUFVLENBQUNjLFlBQWhDO0FBQ0EsUUFBTWYsUUFBUSxHQUFHdEIsSUFBSSxDQUFDc0MsUUFBTCxDQUFjZixVQUFVLENBQUNELFFBQXpCLENBQWpCO0FBQ0EsUUFBTTdCLFVBQVUsQ0FBQzhDLEdBQVgsQ0FBZTtBQUFFYixJQUFBQSxFQUFGO0FBQU0xQixJQUFBQSxJQUFJLEVBQUVzQixRQUFaO0FBQXNCZSxJQUFBQTtBQUF0QixHQUFmLENBQU47QUFDQXpCLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLEVBQVQ7QUFDRCxDQVJEO0FBU0F1QixNQUFNLENBQUNDLE9BQVAsR0FBaUIvQyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92LXJhbmEvS25vd1doZXJlL2JhY2tlbmQvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG52YXIgdmlkZW9RdWV1ZSA9IHJlcXVpcmUgKFwiLi4vcXVldWVzL3ZpZGVvUXVldWVcIik7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IG1vZGVscyA9IHJlcXVpcmUoXCIuLi9tb2RlbHNcIik7XG52YXIgbXVsdGVyID0gcmVxdWlyZShcIm11bHRlclwiKTtcbmNvbnN0IGZzID0gcmVxdWlyZShcImZzXCIpLnByb21pc2VzO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gIGRlc3RpbmF0aW9uOiAocmVxLCBmaWxlLCBjYikgPT4ge1xuICAgIGNiKG51bGwsIFwiLi9maWxlc1wiKTtcbiAgfSxcbiAgZmlsZW5hbWU6IChyZXEsIGZpbGUsIGNiKSA9PiB7XG4gICAgY2IobnVsbCwgYCR7K25ldyBEYXRlKCl9XyR7ZmlsZS5vcmlnaW5hbG5hbWV9YCk7XG4gIH1cbn0pO1xuY29uc3QgdXBsb2FkID0gbXVsdGVyKHsgc3RvcmFnZSB9KTtcbnJvdXRlci5nZXQoXCIvXCIsIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCBjb252ZXJzaW9ucyA9IGF3YWl0IG1vZGVscy5WaWRlb0NvbnZlcnNpb24uZmluZEFsbCgpO1xuICByZXMuanNvbihjb252ZXJzaW9ucyk7XG59KTtcbnJvdXRlci5wb3N0KFwiL1wiLCB1cGxvYWQuc2luZ2xlKFwidmlkZW9cIiksIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCBkYXRhID0geyAuLi5yZXEuYm9keSwgZmlsZVBhdGg6IHJlcS5maWxlLnBhdGggfTtcbiAgY29uc3QgY29udmVyc2lvbiA9IGF3YWl0IG1vZGVscy5WaWRlb0NvbnZlcnNpb24uY3JlYXRlKGRhdGEpO1xuICByZXMuanNvbihjb252ZXJzaW9uKTtcbn0pO1xucm91dGVyLmRlbGV0ZShcIi86aWRcIiwgYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgY29uc3QgY29udmVyc2lvbnMgPSBhd2FpdCBtb2RlbHMuVmlkZW9Db252ZXJzaW9uLmZpbmRBbGwoeyB3aGVyZTogeyBpZCB9IH0pO1xuICBjb25zdCBjb252ZXJzaW9uID0gY29udmVyc2lvbnNbMF07XG4gIHRyeSB7XG4gICAgYXdhaXQgZnMudW5saW5rKGAke19fZGlybmFtZX0vLi4vJHtjb252ZXJzaW9uLmZpbGVQYXRofWApO1xuICAgIGlmIChjb252ZXJzaW9uLmNvbnZlcnRlZEZpbGVQYXRoKSB7XG4gICAgICBhd2FpdCBmcy51bmxpbmsoYCR7X19kaXJuYW1lfS8uLi9maWxlcy8ke2NvbnZlcnNpb24uY29udmVydGVkRmlsZVBhdGh9YCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICB9IGZpbmFsbHkge1xuICAgIGF3YWl0IG1vZGVscy5WaWRlb0NvbnZlcnNpb24uZGVzdHJveSh7IHdoZXJlOiB7IGlkIH0gfSk7XG4gICAgcmVzLmpzb24oe30pO1xuICB9XG59KTtcbnJvdXRlci5wdXQoXCIvY2FuY2VsLzppZFwiLCBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xuICBjb25zdCBjb252ZXJzaW9uID0gYXdhaXQgbW9kZWxzLlZpZGVvQ29udmVyc2lvbi51cGRhdGUoXG4gICAgeyBzdGF0dXM6IFwiY2FuY2VsbGVkXCIgfSxcbiAgICB7XG4gICAgICB3aGVyZTogeyBpZCB9XG4gICAgfVxuICApO1xuICByZXMuanNvbihjb252ZXJzaW9uKTtcbn0pO1xucm91dGVyLmdldChcIi9zdGFydC86aWRcIiwgYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgY29uc3QgY29udmVyc2lvbnMgPSBhd2FpdCBtb2RlbHMuVmlkZW9Db252ZXJzaW9uLmZpbmRBbGwoeyB3aGVyZTogeyBpZCB9IH0pO1xuICBjb25zdCBjb252ZXJzaW9uID0gY29udmVyc2lvbnNbMF07XG4gIGNvbnN0IG91dHB1dEZvcm1hdCA9IGNvbnZlcnNpb24ub3V0cHV0Rm9ybWF0O1xuICBjb25zdCBmaWxlUGF0aCA9IHBhdGguYmFzZW5hbWUoY29udmVyc2lvbi5maWxlUGF0aCk7XG4gIGF3YWl0IHZpZGVvUXVldWUuYWRkKHsgaWQsIHBhdGg6IGZpbGVQYXRoLCBvdXRwdXRGb3JtYXQgfSk7XG4gIHJlcy5qc29uKHt9KTtcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "conversions.js"
      ],
      "names": [
        "express",
        "require",
        "videoQueue",
        "router",
        "Router",
        "models",
        "multer",
        "fs",
        "promises",
        "path",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "Date",
        "originalname",
        "upload",
        "get",
        "res",
        "next",
        "conversions",
        "VideoConversion",
        "findAll",
        "json",
        "post",
        "single",
        "data",
        "body",
        "filePath",
        "conversion",
        "create",
        "delete",
        "id",
        "params",
        "where",
        "unlink",
        "__dirname",
        "convertedFilePath",
        "error",
        "destroy",
        "put",
        "update",
        "status",
        "outputFormat",
        "basename",
        "add",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/routes/",
      "sourcesContent": [
        "var express = require(\"express\");\nvar videoQueue = require (\"../queues/videoQueue\");\nvar router = express.Router();\nconst models = require(\"../models\");\nvar multer = require(\"multer\");\nconst fs = require(\"fs\").promises;\nconst path = require(\"path\");\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"./files\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, `${+new Date()}_${file.originalname}`);\n  }\n});\nconst upload = multer({ storage });\nrouter.get(\"/\", async (req, res, next) => {\n  const conversions = await models.VideoConversion.findAll();\n  res.json(conversions);\n});\nrouter.post(\"/\", upload.single(\"video\"), async (req, res, next) => {\n  const data = { ...req.body, filePath: req.file.path };\n  const conversion = await models.VideoConversion.create(data);\n  res.json(conversion);\n});\nrouter.delete(\"/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversions = await models.VideoConversion.findAll({ where: { id } });\n  const conversion = conversions[0];\n  try {\n    await fs.unlink(`${__dirname}/../${conversion.filePath}`);\n    if (conversion.convertedFilePath) {\n      await fs.unlink(`${__dirname}/../files/${conversion.convertedFilePath}`);\n    }\n  } catch (error) {\n  } finally {\n    await models.VideoConversion.destroy({ where: { id } });\n    res.json({});\n  }\n});\nrouter.put(\"/cancel/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversion = await models.VideoConversion.update(\n    { status: \"cancelled\" },\n    {\n      where: { id }\n    }\n  );\n  res.json(conversion);\n});\nrouter.get(\"/start/:id\", async (req, res, next) => {\n  const id = req.params.id;\n  const conversions = await models.VideoConversion.findAll({ where: { id } });\n  const conversion = conversions[0];\n  const outputFormat = conversion.outputFormat;\n  const filePath = path.basename(conversion.filePath);\n  await videoQueue.add({ id, path: filePath, outputFormat });\n  res.json({});\n});\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1601626515946
  },
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/models/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/models/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/models/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(file => {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(file => {\n  const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n\n  db[model.name] = model;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJfX2Rpcm5hbWUiLCJkYiIsInNlcXVlbGl6ZSIsInVzZV9lbnZfdmFyaWFibGUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwiRGF0YVR5cGVzIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJtb2RlbE5hbWUiLCJhc3NvY2lhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBTCxDQUFjQyxVQUFkLENBQWpCO0FBQ0EsTUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxNQUFNQyxNQUFNLEdBQUdSLE9BQU8sQ0FBQ1MsU0FBUyxHQUFHLHdCQUFiLENBQVAsQ0FBOENKLEdBQTlDLENBQWY7O0FBQ0EsTUFBTUssRUFBRSxHQUFHLEVBQVg7QUFFQSxJQUFJQyxTQUFKOztBQUNBLElBQUlILE1BQU0sQ0FBQ0ksZ0JBQVgsRUFBNkI7QUFDM0JELEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNJLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNJLGdCQUFuQixDQUFkLEVBQW9ESixNQUFwRCxDQUFaO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xHLEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNNLE1BQU0sQ0FBQ0ssUUFBckIsRUFBK0JMLE1BQU0sQ0FBQ00sUUFBdEMsRUFBZ0ROLE1BQU0sQ0FBQ08sUUFBdkQsRUFBaUVQLE1BQWpFLENBQVo7QUFDRDs7QUFFRFQsRUFBRSxDQUNDaUIsV0FESCxDQUNlUCxTQURmLEVBRUdRLE1BRkgsQ0FFVUMsSUFBSSxJQUFJO0FBQ2QsU0FBUUEsSUFBSSxDQUFDQyxPQUFMLENBQWEsR0FBYixNQUFzQixDQUF2QixJQUE4QkQsSUFBSSxLQUFLZixRQUF2QyxJQUFxRGUsSUFBSSxDQUFDRSxLQUFMLENBQVcsQ0FBQyxDQUFaLE1BQW1CLEtBQS9FO0FBQ0QsQ0FKSCxFQUtHQyxPQUxILENBS1dILElBQUksSUFBSTtBQUNmLFFBQU1JLEtBQUssR0FBR3RCLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDc0IsSUFBTCxDQUFVZCxTQUFWLEVBQXFCUyxJQUFyQixDQUFELENBQVAsQ0FBb0NQLFNBQXBDLEVBQStDVCxTQUFTLENBQUNzQixTQUF6RCxDQUFkOztBQUNBZCxFQUFBQSxFQUFFLENBQUNZLEtBQUssQ0FBQ0csSUFBUCxDQUFGLEdBQWlCSCxLQUFqQjtBQUNELENBUkg7QUFVQUksTUFBTSxDQUFDQyxJQUFQLENBQVlqQixFQUFaLEVBQWdCVyxPQUFoQixDQUF3Qk8sU0FBUyxJQUFJO0FBQ25DLE1BQUlsQixFQUFFLENBQUNrQixTQUFELENBQUYsQ0FBY0MsU0FBbEIsRUFBNkI7QUFDM0JuQixJQUFBQSxFQUFFLENBQUNrQixTQUFELENBQUYsQ0FBY0MsU0FBZCxDQUF3Qm5CLEVBQXhCO0FBQ0Q7QUFDRixDQUpEO0FBTUFBLEVBQUUsQ0FBQ0MsU0FBSCxHQUFlQSxTQUFmO0FBQ0FELEVBQUUsQ0FBQ1IsU0FBSCxHQUFlQSxTQUFmO0FBRUE0QixNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixFQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92LXJhbmEvS25vd1doZXJlL2JhY2tlbmQvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuY29uc3QgYmFzZW5hbWUgPSBwYXRoLmJhc2VuYW1lKF9fZmlsZW5hbWUpO1xuY29uc3QgZW52ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50JztcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoX19kaXJuYW1lICsgJy8uLi9jb25maWcvY29uZmlnLmpzb24nKVtlbnZdO1xuY29uc3QgZGIgPSB7fTtcblxubGV0IHNlcXVlbGl6ZTtcbmlmIChjb25maWcudXNlX2Vudl92YXJpYWJsZSkge1xuICBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKHByb2Nlc3MuZW52W2NvbmZpZy51c2VfZW52X3ZhcmlhYmxlXSwgY29uZmlnKTtcbn0gZWxzZSB7XG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoY29uZmlnLmRhdGFiYXNlLCBjb25maWcudXNlcm5hbWUsIGNvbmZpZy5wYXNzd29yZCwgY29uZmlnKTtcbn1cblxuZnNcbiAgLnJlYWRkaXJTeW5jKF9fZGlybmFtZSlcbiAgLmZpbHRlcihmaWxlID0+IHtcbiAgICByZXR1cm4gKGZpbGUuaW5kZXhPZignLicpICE9PSAwKSAmJiAoZmlsZSAhPT0gYmFzZW5hbWUpICYmIChmaWxlLnNsaWNlKC0zKSA9PT0gJy5qcycpO1xuICB9KVxuICAuZm9yRWFjaChmaWxlID0+IHtcbiAgICBjb25zdCBtb2RlbCA9IHJlcXVpcmUocGF0aC5qb2luKF9fZGlybmFtZSwgZmlsZSkpKHNlcXVlbGl6ZSwgU2VxdWVsaXplLkRhdGFUeXBlcyk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "basename",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "db",
        "sequelize",
        "use_env_variable",
        "database",
        "username",
        "password",
        "readdirSync",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "DataTypes",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,wBAAb,CAAP,CAA8CJ,GAA9C,CAAf;;AACA,MAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcM,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEUC,IAAI,IAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKf,QAAvC,IAAqDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,IAAI,IAAI;AACf,QAAMI,KAAK,GAAGtB,OAAO,CAACC,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAAD,CAAP,CAAoCP,SAApC,EAA+CT,SAAS,CAACsB,SAAzD,CAAd;;AACAd,EAAAA,EAAE,CAACY,KAAK,CAACG,IAAP,CAAF,GAAiBH,KAAjB;AACD,CARH;AAUAI,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwBO,SAAS,IAAI;AACnC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA4B,MAAM,CAACC,OAAP,GAAiBrB,EAAjB",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601560355203
  },
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/models/videoconversion.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/models/videoconversion.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/models/videoconversion.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/models/videoconversion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
        "sourceFileName": "videoconversion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = (sequelize, DataTypes) => {\n  const VideoConversion = sequelize.define(\"VideoConversion\", {\n    filePath: DataTypes.STRING,\n    convertedFilePath: DataTypes.STRING,\n    outputFormat: DataTypes.STRING,\n    status: {\n      type: DataTypes.ENUM(\"pending\", \"done\", \"cancelled\"),\n      defaultValue: \"pending\"\n    }\n  }, {});\n\n  VideoConversion.associate = function (models) {// associations can be defined here\n  };\n\n  return VideoConversion;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvY29udmVyc2lvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiVmlkZW9Db252ZXJzaW9uIiwiZGVmaW5lIiwiZmlsZVBhdGgiLCJTVFJJTkciLCJjb252ZXJ0ZWRGaWxlUGF0aCIsIm91dHB1dEZvcm1hdCIsInN0YXR1cyIsInR5cGUiLCJFTlVNIiwiZGVmYXVsdFZhbHVlIiwiYXNzb2NpYXRlIiwibW9kZWxzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLFNBQUQsRUFBWUMsU0FBWixLQUEwQjtBQUN6QyxRQUFNQyxlQUFlLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUN0QixpQkFEc0IsRUFFdEI7QUFDRUMsSUFBQUEsUUFBUSxFQUFFSCxTQUFTLENBQUNJLE1BRHRCO0FBRUVDLElBQUFBLGlCQUFpQixFQUFFTCxTQUFTLENBQUNJLE1BRi9CO0FBR0VFLElBQUFBLFlBQVksRUFBRU4sU0FBUyxDQUFDSSxNQUgxQjtBQUlFRyxJQUFBQSxNQUFNLEVBQUU7QUFDTkMsTUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNTLElBQVYsQ0FBZSxTQUFmLEVBQTBCLE1BQTFCLEVBQWtDLFdBQWxDLENBREE7QUFFTkMsTUFBQUEsWUFBWSxFQUFFO0FBRlI7QUFKVixHQUZzQixFQVd0QixFQVhzQixDQUF4Qjs7QUFhQVQsRUFBQUEsZUFBZSxDQUFDVSxTQUFoQixHQUE0QixVQUFTQyxNQUFULEVBQWlCLENBQzNDO0FBQ0QsR0FGRDs7QUFHQSxTQUFPWCxlQUFQO0FBQ0QsQ0FsQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvdi1yYW5hL0tub3dXaGVyZS9iYWNrZW5kL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFZpZGVvQ29udmVyc2lvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoXG4gICAgXCJWaWRlb0NvbnZlcnNpb25cIixcbiAgICB7XG4gICAgICBmaWxlUGF0aDogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGNvbnZlcnRlZEZpbGVQYXRoOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgb3V0cHV0Rm9ybWF0OiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgc3RhdHVzOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5FTlVNKFwicGVuZGluZ1wiLCBcImRvbmVcIiwgXCJjYW5jZWxsZWRcIiksXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJwZW5kaW5nXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIHt9XG4gICk7XG4gIFZpZGVvQ29udmVyc2lvbi5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gVmlkZW9Db252ZXJzaW9uO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "videoconversion.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "VideoConversion",
        "define",
        "filePath",
        "STRING",
        "convertedFilePath",
        "outputFormat",
        "status",
        "type",
        "ENUM",
        "defaultValue",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,QAAMC,eAAe,GAAGF,SAAS,CAACG,MAAV,CACtB,iBADsB,EAEtB;AACEC,IAAAA,QAAQ,EAAEH,SAAS,CAACI,MADtB;AAEEC,IAAAA,iBAAiB,EAAEL,SAAS,CAACI,MAF/B;AAGEE,IAAAA,YAAY,EAAEN,SAAS,CAACI,MAH1B;AAIEG,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAER,SAAS,CAACS,IAAV,CAAe,SAAf,EAA0B,MAA1B,EAAkC,WAAlC,CADA;AAENC,MAAAA,YAAY,EAAE;AAFR;AAJV,GAFsB,EAWtB,EAXsB,CAAxB;;AAaAT,EAAAA,eAAe,CAACU,SAAhB,GAA4B,UAASC,MAAT,EAAiB,CAC3C;AACD,GAFD;;AAGA,SAAOX,eAAP;AACD,CAlBD",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/models/",
      "sourcesContent": [
        "\"use strict\";\nmodule.exports = (sequelize, DataTypes) => {\n  const VideoConversion = sequelize.define(\n    \"VideoConversion\",\n    {\n      filePath: DataTypes.STRING,\n      convertedFilePath: DataTypes.STRING,\n      outputFormat: DataTypes.STRING,\n      status: {\n        type: DataTypes.ENUM(\"pending\", \"done\", \"cancelled\"),\n        defaultValue: \"pending\"\n      }\n    },\n    {}\n  );\n  VideoConversion.associate = function(models) {\n    // associations can be defined here\n  };\n  return VideoConversion;\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1601562518308
  },
  "{\"sourceRoot\":\"/home/v-rana/KnowWhere/backend/queues/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/v-rana/KnowWhere/backend\",\"filename\":\"/home/v-rana/KnowWhere/backend/queues/videoQueue.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/v-rana/KnowWhere/backend\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/v-rana/KnowWhere/backend/queues/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/v-rana/KnowWhere/backend",
      "filename": "/home/v-rana/KnowWhere/backend/queues/videoQueue.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/v-rana/KnowWhere/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/v-rana/KnowWhere/backend/queues/videoQueue.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/v-rana/KnowWhere/backend/queues/videoQueue.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/v-rana/KnowWhere/backend/queues/",
        "sourceFileName": "videoQueue.js"
      }
    },
    "ast": null,
    "code": "const Queue = require(\"bull\"); // import Queue from 'bull';\n// var videoQueue = new Queue(\"video transcoding\");\n\n\nvar videoQueue = new Queue('video transcoding', 'redis://127.0.0.1:6379');\n\nconst models = require(\"../models\");\n\nvar ffmpeg = require(\"fluent-ffmpeg\");\n\nconst fs = require(\"fs\");\n\nconst convertVideo = (path, format) => {\n  const fileName = path.replace(/\\.[^/.]+$/, \"\");\n  const convertedFilePath = `${fileName}_${+new Date()}.${format}`;\n  return new Promise((resolve, reject) => {\n    ffmpeg(`${__dirname}/../files/${path}`).setFfmpegPath(process.env.FFMPEG_PATH).setFfprobePath(process.env.FFPROBE_PATH).toFormat(format).on(\"start\", commandLine => {\n      console.log(`Spawned Ffmpeg with command: ${commandLine}`);\n    }).on(\"error\", (err, stdout, stderr) => {\n      console.log(err, stdout, stderr);\n      reject(err);\n    }).on(\"end\", (stdout, stderr) => {\n      console.log(stdout, stderr);\n      resolve({\n        convertedFilePath\n      });\n    }).saveToFile(`${__dirname}/../files/${convertedFilePath}`);\n  });\n};\n\nvideoQueue.process(async job => {\n  const {\n    id,\n    path,\n    outputFormat\n  } = job.data;\n\n  try {\n    const conversions = await models.VideoConversion.findAll({\n      where: {\n        id\n      }\n    });\n    const conv = conversions[0];\n\n    if (conv.status == \"cancelled\") {\n      return Promise.resolve();\n    }\n\n    const pathObj = await convertVideo(path, outputFormat);\n    const convertedFilePath = pathObj.convertedFilePath;\n    const conversion = await models.VideoConversion.update({\n      convertedFilePath,\n      status: \"done\"\n    }, {\n      where: {\n        id\n      }\n    });\n    Promise.resolve(conversion);\n  } catch (error) {\n    Promise.reject(error);\n  }\n});\nmodule.exports = videoQueue;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvUXVldWUuanMiXSwibmFtZXMiOlsiUXVldWUiLCJyZXF1aXJlIiwidmlkZW9RdWV1ZSIsIm1vZGVscyIsImZmbXBlZyIsImZzIiwiY29udmVydFZpZGVvIiwicGF0aCIsImZvcm1hdCIsImZpbGVOYW1lIiwicmVwbGFjZSIsImNvbnZlcnRlZEZpbGVQYXRoIiwiRGF0ZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiX19kaXJuYW1lIiwic2V0RmZtcGVnUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJGRk1QRUdfUEFUSCIsInNldEZmcHJvYmVQYXRoIiwiRkZQUk9CRV9QQVRIIiwidG9Gb3JtYXQiLCJvbiIsImNvbW1hbmRMaW5lIiwiY29uc29sZSIsImxvZyIsImVyciIsInN0ZG91dCIsInN0ZGVyciIsInNhdmVUb0ZpbGUiLCJqb2IiLCJpZCIsIm91dHB1dEZvcm1hdCIsImRhdGEiLCJjb252ZXJzaW9ucyIsIlZpZGVvQ29udmVyc2lvbiIsImZpbmRBbGwiLCJ3aGVyZSIsImNvbnYiLCJzdGF0dXMiLCJwYXRoT2JqIiwiY29udmVyc2lvbiIsInVwZGF0ZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFyQixDLENBQ0E7QUFDQTs7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHLElBQUlGLEtBQUosQ0FBVSxtQkFBVixFQUErQix3QkFBL0IsQ0FBakI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF0Qjs7QUFDQSxJQUFJRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQXBCOztBQUNBLE1BQU1JLEVBQUUsR0FBR0osT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUssWUFBWSxHQUFHLENBQUNDLElBQUQsRUFBT0MsTUFBUCxLQUFrQjtBQUNyQyxRQUFNQyxRQUFRLEdBQUdGLElBQUksQ0FBQ0csT0FBTCxDQUFhLFdBQWIsRUFBMEIsRUFBMUIsQ0FBakI7QUFDQSxRQUFNQyxpQkFBaUIsR0FBSSxHQUFFRixRQUFTLElBQUcsQ0FBQyxJQUFJRyxJQUFKLEVBQVcsSUFBR0osTUFBTyxFQUEvRDtBQUNBLFNBQU8sSUFBSUssT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q1gsSUFBQUEsTUFBTSxDQUFFLEdBQUVZLFNBQVUsYUFBWVQsSUFBSyxFQUEvQixDQUFOLENBQ0dVLGFBREgsQ0FDaUJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxXQUQ3QixFQUVHQyxjQUZILENBRWtCSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsWUFGOUIsRUFHR0MsUUFISCxDQUdZZixNQUhaLEVBSUdnQixFQUpILENBSU0sT0FKTixFQUllQyxXQUFXLElBQUk7QUFDMUJDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGdDQUErQkYsV0FBWSxFQUF4RDtBQUNELEtBTkgsRUFPR0QsRUFQSCxDQU9NLE9BUE4sRUFPZSxDQUFDSSxHQUFELEVBQU1DLE1BQU4sRUFBY0MsTUFBZCxLQUF5QjtBQUNwQ0osTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLEdBQVosRUFBaUJDLE1BQWpCLEVBQXlCQyxNQUF6QjtBQUNBZixNQUFBQSxNQUFNLENBQUNhLEdBQUQsQ0FBTjtBQUNELEtBVkgsRUFXR0osRUFYSCxDQVdNLEtBWE4sRUFXYSxDQUFDSyxNQUFELEVBQVNDLE1BQVQsS0FBb0I7QUFDN0JKLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxNQUFaLEVBQW9CQyxNQUFwQjtBQUNBaEIsTUFBQUEsT0FBTyxDQUFDO0FBQUVILFFBQUFBO0FBQUYsT0FBRCxDQUFQO0FBQ0QsS0FkSCxFQWVHb0IsVUFmSCxDQWVlLEdBQUVmLFNBQVUsYUFBWUwsaUJBQWtCLEVBZnpEO0FBZ0JELEdBakJNLENBQVA7QUFrQkQsQ0FyQkQ7O0FBc0JBVCxVQUFVLENBQUNnQixPQUFYLENBQW1CLE1BQU1jLEdBQU4sSUFBYTtBQUM5QixRQUFNO0FBQUVDLElBQUFBLEVBQUY7QUFBTTFCLElBQUFBLElBQU47QUFBWTJCLElBQUFBO0FBQVosTUFBNkJGLEdBQUcsQ0FBQ0csSUFBdkM7O0FBQ0EsTUFBSTtBQUNGLFVBQU1DLFdBQVcsR0FBRyxNQUFNakMsTUFBTSxDQUFDa0MsZUFBUCxDQUF1QkMsT0FBdkIsQ0FBK0I7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQUVOLFFBQUFBO0FBQUY7QUFBVCxLQUEvQixDQUExQjtBQUNBLFVBQU1PLElBQUksR0FBR0osV0FBVyxDQUFDLENBQUQsQ0FBeEI7O0FBQ0EsUUFBSUksSUFBSSxDQUFDQyxNQUFMLElBQWUsV0FBbkIsRUFBZ0M7QUFDOUIsYUFBTzVCLE9BQU8sQ0FBQ0MsT0FBUixFQUFQO0FBQ0Q7O0FBQ0QsVUFBTTRCLE9BQU8sR0FBRyxNQUFNcEMsWUFBWSxDQUFDQyxJQUFELEVBQU8yQixZQUFQLENBQWxDO0FBQ0EsVUFBTXZCLGlCQUFpQixHQUFHK0IsT0FBTyxDQUFDL0IsaUJBQWxDO0FBQ0EsVUFBTWdDLFVBQVUsR0FBRyxNQUFNeEMsTUFBTSxDQUFDa0MsZUFBUCxDQUF1Qk8sTUFBdkIsQ0FDdkI7QUFBRWpDLE1BQUFBLGlCQUFGO0FBQXFCOEIsTUFBQUEsTUFBTSxFQUFFO0FBQTdCLEtBRHVCLEVBRXZCO0FBQ0VGLE1BQUFBLEtBQUssRUFBRTtBQUFFTixRQUFBQTtBQUFGO0FBRFQsS0FGdUIsQ0FBekI7QUFNQXBCLElBQUFBLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQjZCLFVBQWhCO0FBQ0QsR0FmRCxDQWVFLE9BQU9FLEtBQVAsRUFBYztBQUNkaEMsSUFBQUEsT0FBTyxDQUFDRSxNQUFSLENBQWU4QixLQUFmO0FBQ0Q7QUFDRixDQXBCRDtBQXFCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCN0MsVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvdi1yYW5hL0tub3dXaGVyZS9iYWNrZW5kL3F1ZXVlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBRdWV1ZSA9IHJlcXVpcmUoXCJidWxsXCIpO1xuLy8gaW1wb3J0IFF1ZXVlIGZyb20gJ2J1bGwnO1xuLy8gdmFyIHZpZGVvUXVldWUgPSBuZXcgUXVldWUoXCJ2aWRlbyB0cmFuc2NvZGluZ1wiKTtcbnZhciB2aWRlb1F1ZXVlID0gbmV3IFF1ZXVlKCd2aWRlbyB0cmFuc2NvZGluZycsICdyZWRpczovLzEyNy4wLjAuMTo2Mzc5Jyk7XG5jb25zdCBtb2RlbHMgPSByZXF1aXJlKFwiLi4vbW9kZWxzXCIpO1xudmFyIGZmbXBlZyA9IHJlcXVpcmUoXCJmbHVlbnQtZmZtcGVnXCIpO1xuY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCBjb252ZXJ0VmlkZW8gPSAocGF0aCwgZm9ybWF0KSA9PiB7XG4gIGNvbnN0IGZpbGVOYW1lID0gcGF0aC5yZXBsYWNlKC9cXC5bXi8uXSskLywgXCJcIik7XG4gIGNvbnN0IGNvbnZlcnRlZEZpbGVQYXRoID0gYCR7ZmlsZU5hbWV9XyR7K25ldyBEYXRlKCl9LiR7Zm9ybWF0fWA7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgZmZtcGVnKGAke19fZGlybmFtZX0vLi4vZmlsZXMvJHtwYXRofWApXG4gICAgICAuc2V0RmZtcGVnUGF0aChwcm9jZXNzLmVudi5GRk1QRUdfUEFUSClcbiAgICAgIC5zZXRGZnByb2JlUGF0aChwcm9jZXNzLmVudi5GRlBST0JFX1BBVEgpXG4gICAgICAudG9Gb3JtYXQoZm9ybWF0KVxuICAgICAgLm9uKFwic3RhcnRcIiwgY29tbWFuZExpbmUgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgU3Bhd25lZCBGZm1wZWcgd2l0aCBjb21tYW5kOiAke2NvbW1hbmRMaW5lfWApO1xuICAgICAgfSlcbiAgICAgIC5vbihcImVycm9yXCIsIChlcnIsIHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVyciwgc3Rkb3V0LCBzdGRlcnIpO1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH0pXG4gICAgICAub24oXCJlbmRcIiwgKHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHN0ZG91dCwgc3RkZXJyKTtcbiAgICAgICAgcmVzb2x2ZSh7IGNvbnZlcnRlZEZpbGVQYXRoIH0pO1xuICAgICAgfSlcbiAgICAgIC5zYXZlVG9GaWxlKGAke19fZGlybmFtZX0vLi4vZmlsZXMvJHtjb252ZXJ0ZWRGaWxlUGF0aH1gKTtcbiAgfSk7XG59O1xudmlkZW9RdWV1ZS5wcm9jZXNzKGFzeW5jIGpvYiA9PiB7XG4gIGNvbnN0IHsgaWQsIHBhdGgsIG91dHB1dEZvcm1hdCB9ID0gam9iLmRhdGE7XG4gIHRyeSB7XG4gICAgY29uc3QgY29udmVyc2lvbnMgPSBhd2FpdCBtb2RlbHMuVmlkZW9Db252ZXJzaW9uLmZpbmRBbGwoeyB3aGVyZTogeyBpZCB9IH0pO1xuICAgIGNvbnN0IGNvbnYgPSBjb252ZXJzaW9uc1swXTtcbiAgICBpZiAoY29udi5zdGF0dXMgPT0gXCJjYW5jZWxsZWRcIikge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICBjb25zdCBwYXRoT2JqID0gYXdhaXQgY29udmVydFZpZGVvKHBhdGgsIG91dHB1dEZvcm1hdCk7XG4gICAgY29uc3QgY29udmVydGVkRmlsZVBhdGggPSBwYXRoT2JqLmNvbnZlcnRlZEZpbGVQYXRoO1xuICAgIGNvbnN0IGNvbnZlcnNpb24gPSBhd2FpdCBtb2RlbHMuVmlkZW9Db252ZXJzaW9uLnVwZGF0ZShcbiAgICAgIHsgY29udmVydGVkRmlsZVBhdGgsIHN0YXR1czogXCJkb25lXCIgfSxcbiAgICAgIHtcbiAgICAgICAgd2hlcmU6IHsgaWQgfVxuICAgICAgfVxuICAgICk7XG4gICAgUHJvbWlzZS5yZXNvbHZlKGNvbnZlcnNpb24pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfVxufSk7XG5tb2R1bGUuZXhwb3J0cyA9IHZpZGVvUXVldWU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "videoQueue.js"
      ],
      "names": [
        "Queue",
        "require",
        "videoQueue",
        "models",
        "ffmpeg",
        "fs",
        "convertVideo",
        "path",
        "format",
        "fileName",
        "replace",
        "convertedFilePath",
        "Date",
        "Promise",
        "resolve",
        "reject",
        "__dirname",
        "setFfmpegPath",
        "process",
        "env",
        "FFMPEG_PATH",
        "setFfprobePath",
        "FFPROBE_PATH",
        "toFormat",
        "on",
        "commandLine",
        "console",
        "log",
        "err",
        "stdout",
        "stderr",
        "saveToFile",
        "job",
        "id",
        "outputFormat",
        "data",
        "conversions",
        "VideoConversion",
        "findAll",
        "where",
        "conv",
        "status",
        "pathObj",
        "conversion",
        "update",
        "error",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/v-rana/KnowWhere/backend/queues/",
      "sourcesContent": [
        "const Queue = require(\"bull\");\n// import Queue from 'bull';\n// var videoQueue = new Queue(\"video transcoding\");\nvar videoQueue = new Queue('video transcoding', 'redis://127.0.0.1:6379');\nconst models = require(\"../models\");\nvar ffmpeg = require(\"fluent-ffmpeg\");\nconst fs = require(\"fs\");\nconst convertVideo = (path, format) => {\n  const fileName = path.replace(/\\.[^/.]+$/, \"\");\n  const convertedFilePath = `${fileName}_${+new Date()}.${format}`;\n  return new Promise((resolve, reject) => {\n    ffmpeg(`${__dirname}/../files/${path}`)\n      .setFfmpegPath(process.env.FFMPEG_PATH)\n      .setFfprobePath(process.env.FFPROBE_PATH)\n      .toFormat(format)\n      .on(\"start\", commandLine => {\n        console.log(`Spawned Ffmpeg with command: ${commandLine}`);\n      })\n      .on(\"error\", (err, stdout, stderr) => {\n        console.log(err, stdout, stderr);\n        reject(err);\n      })\n      .on(\"end\", (stdout, stderr) => {\n        console.log(stdout, stderr);\n        resolve({ convertedFilePath });\n      })\n      .saveToFile(`${__dirname}/../files/${convertedFilePath}`);\n  });\n};\nvideoQueue.process(async job => {\n  const { id, path, outputFormat } = job.data;\n  try {\n    const conversions = await models.VideoConversion.findAll({ where: { id } });\n    const conv = conversions[0];\n    if (conv.status == \"cancelled\") {\n      return Promise.resolve();\n    }\n    const pathObj = await convertVideo(path, outputFormat);\n    const convertedFilePath = pathObj.convertedFilePath;\n    const conversion = await models.VideoConversion.update(\n      { convertedFilePath, status: \"done\" },\n      {\n        where: { id }\n      }\n    );\n    Promise.resolve(conversion);\n  } catch (error) {\n    Promise.reject(error);\n  }\n});\nmodule.exports = videoQueue;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601626559407
  }
}